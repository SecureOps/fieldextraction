morphlines : [
  {
    id : morphlines_paloalto_gp_gwc
    importCommands : ["org.kitesdk.**"]
    
    commands : [
#      #{ logInfo { format : "input record paloalto: {}", args : ["@{}"] } }

      ## Detect what type of Palo Alto log we are dealing with, usually in the 3rd or 4th field (TRAFFIC, THREAT, GLOBALPROTECT, SYSTEM, etc.)
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString:  """
            TIMESTAMP (?:%{TIMESTAMP_ISO8601}|%{SYSLOGTIMESTAMP})
            PALOALTO_GP %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{WORD}-%{WORD}-%{WORD},%{WORD}-%{WORD},%{INT},%{INT},%{WORD},%{WORD},"GlobalProtect gateway client configuration generated. User name: %{USERNAME:user}, Private IP: %{IP:src}, Client version %{DATA:client_ver},Device name:%{%DATA:deviceName},Client OS:%{DATA:clientOS},VPN type:%{DATA:vpnType}

#,%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{WORD:GB_Action}-%{WORD:GB_Action}-%{WORD:GB_Action},%{WORD}-%{WORD},%{INT},%{INT},%{WORD},%{WORD},"GlobalProtect gateway client
          """
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP:_attachment_body}"""
          }
        }
      }

      ## Split CSV and set the field names according to Palo Alto documentation: https://live.paloaltonetworks.com/servlet/JiveServlet/downloadBody/2021-102-8-13361/PANOS-Syslog-Integration-TN-RevM.pdf
      {
	toByteArray { field : _attachment_body }
      }
      {
	readCSV {
	  separator : ","
	  columns : [ receive_time_ts, serial, type, subtype, configVer, time_generated_ts, vsys, eventid_i, object, fmt_i, id, module, severity, description, seqno_i, actionflags ]
	  ignoreFirstLine : false
	  quoteChar : "\""
	  commentPrefix : ""
	  trim : true
	  charset : UTF-8
	
	}
      }
      {
	split {
	  inputField: description
	  outputFields : [GP_action, src, client_ver, clientOs]
	  separator: ", "
	  addEmptyStrings: false
	  trim : true	
	}
      }


      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:paloalto_threat", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }

      # log the record at DEBUG level to SLF4J
#      #{ logInfo { format : "output record paloalto: {}", args : ["@{}"] } }

    ]
  }
]
