DICTIONARY_STRINGS = """
            TIMESTAMP (?:%{TIMESTAMP_ISO8601}|%{SYSLOGTIMESTAMP})
            PALOALTO_GP_GWC_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client configuration generated. User name: %{USERNAME:user}, Private IP: %{IP:src}, Client version: %{DATA:clientVer}, Device name: %{DATA:deviceName}, Client OS: %{DATA:clientOS}, VPN type: %{DATA:VPNtype},%{DATA:seqno_s},%{DATA:actionflags}
            PALOALTO_GP_GWC_SUCCVER2 %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client configuration generated. User name: %{USERNAME:user}, Private IP: %{IP:src}, Client version %{DATA:clientVer}, Client OS: %{DATA:clientOS}.",%{DATA:seqno_s},%{DATA:actionflags}
            PALOALTO_GP_GWC_FAIL %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client configuration failed. User name: %{USERNAME:user}, error: %{GREEDYDATA:error},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWC_RELEASE %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client configuration released. User name: %{USERNAME:user}, Private IP: %{IP:src}, Client version: %{DATA:clientVer}, Device name: %{DATA:deviceName}, Client OS: %{DATA:clientOS}, VPN type: %{DATA:VPNtype},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWR_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway user login succeeded. Login from: %{IP:src}, User name: %{USERNAME:user}.",%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWR_FAIL %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway user login failed. Login from: %{IP:src}, User name: %{USERNAME:user}, error: %{GREEDYDATA:error},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWA_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway user authentication succeeded. Login from: %{IP:src}, User name: %{USERNAME:user}, Auth type: %{DATA:authType},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWL_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway user logout succeeded. User name: %{USERNAME:user}, Reason: %{GREEDYDATA:reason},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWS_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client switch to SSL tunnel mode succeeded. User name: %{DATA:user}, Private IP: %{IP:src}.",%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_PC_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect portal client configuration generated. Login from: %{IP:src}, User name: %{USERNAME:user}, Config name: %{GREEDYDATA:configName},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_PA_SUCC %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect portal user authentication succeeded. Login from: %{IP:src}, User name: %{USERNAME:user}, Auth type: %{GREEDYDATA:authType},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_PA_SUCCVER2 %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect portal user authentication succeeded. Login from: %{IP:src}, User name: %{USERNAME:user}.",%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_PA_FAIL %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect portal user authentication failed. Login from: %{IP:src}, User name: %{USERNAME:user}, Reason: %{GREEDYDATA:reason}, Auth type: %{GREEDYDATA:authType},%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_PA_FAILVER2 %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect portal user authentication failed. Login from: %{IP:src}, User name: %{DATA:user}, Reason: %{GREEDYDATA:reason}.",%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GEN %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"%{GREEDYDATA:description}.",%{DATA:seqno_i},%{DATA:actionflags}
	    	PALOALTO_SYSTEM %{DATA},(?:SYSTEM),%{DATA},%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},%{DATA:vsys},%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},%{GREEDYDATA}
			PALOALTO_GP_GWC_RELEASEVER2 %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway client configuration released. User name: %{DATA:user}, Private IP: %{IP:src}",%{DATA:seqno_i},%{DATA:actionflags}
            PALOALTO_GP_GWA_SUCCVER2 %{DATA},%{DATA},(?:SYSTEM),(?:globalprotect),%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},,%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},"GlobalProtect gateway user authentication succeeded. Login from: %{IP:src}, User name: %{DATA:user},%{DATA:seqno_i},%{DATA:actionflags}
            """

morphlines : [
    {
    id : morphlines_paloalto_gp_gwc_succ
    importCommands : ["org.kitesdk.**"]
    
    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString:  ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWC_SUCC:_attachment_body}"""
          }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWC_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            { 
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwc_succ
          HEADER_extractor_version : [1]
        }
	  }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwc_succVer2
    importCommands : ["org.kitesdk.**"]
    
    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString:  ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWC_SUCCVER2:_attachment_body}"""
          }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWA_SUCCVER2", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            { 
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwc_succVer2
          HEADER_extractor_version : [1]
        }
	  }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwc_fail
    importCommands : ["org.kitesdk.**"]
    
    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWC_FAIL:_attachment_body}"""
          }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWC_FAIL", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwc_fail
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwc_release
    importCommands : ["org.kitesdk.**"]
    
    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWC_RELEASE:_attachment_body}"""
          }
        }
      }

   ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWC_RELEASE", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwc_release
          HEADER_extractor_version : [1]
        }
          }
    ]
  }  
  {
    id : morphlines_paloalto_gp_gwc_releaseVer2
    importCommands : ["org.kitesdk.**"]
    
    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWC_RELEASEVER2:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWC_RELEASEVER2", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwc_releaseVer2
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwr_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWR_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWR_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwr_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwr_fail
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWR_FAIL:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWR_FAIL", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwr_fail
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwa_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWA_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWA_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwa_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwa_succVer2
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWA_SUCCVER2:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWA_SUCCVER2", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwa_succVer2
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gwl_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWL_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWL_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gwl_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_gws_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GWS_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GWS_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_gws_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_pc_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_PC_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_PC_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_pc_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_pa_succ
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_PA_SUCC:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_PA_SUCC", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_pa_succ
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_pa_succVer2
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_PA_SUCCVER2:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_PA_SUCCVER2", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_pa_succVer2
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_pa_fail
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_PA_FAIL:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_PA_FAIL", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_pa_fail
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_gp_pa_failVer2
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_PA_FAILVER2:_attachment_body}"""
         }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_PA_FAILVER2", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
            {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_pa_failVer2
          HEADER_extractor_version : [1]
        }
          }
    ]
  }


  ## PaloAlto GlobalProtect generic log parser, catch-all pa gp logs not caught by any current regex pattern
  {
    id : morphlines_paloalto_gp_generic
    importCommands : ["org.kitesdk.**"]

    commands : [
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString: ${DICTIONARY_STRINGS}
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_GP_GEN:_attachment_body}"""
          }
        }
      }

      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:PALOALTO_GP_GEN", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
      {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_gp_generic
          HEADER_extractor_version : [1]
        }
          }
    ]
  }
  {
    id : morphlines_paloalto_system
    importCommands : ["org.kitesdk.**"]

    commands : [
#      #{ logInfo { format : "input record paloalto: {}", args : ["@{}"] } }

      ## Detect what type of Palo Alto log we are dealing with, usually in the 3rd or 4th field (TRAFFIC, THREAT, GLOBAL_PROTECT, SYSTEM, etc.)
      {
        grok {
          dictionaryResources : [ "grokpatterns/grok-patterns" ]
          dictionaryString:  """
            TIMESTAMP (?:%{TIMESTAMP_ISO8601}|%{SYSLOGTIMESTAMP})
            PALOALTO_SYSTEM %{DATA},(?:SYSTEM),%{DATA},%{INT},%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME},%{DATA:vsys},%{DATA:eventid_i},%{DATA:object},%{INT},%{INT},%{WORD:module},%{WORD:severity},%{GREEDYDATA}
          """
          expressions : {
            message : """^(?:<%{INT:priority}>)?%{TIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_host} (%{INT},)?%{PALOALTO_SYSTEM:paloalto_system}"""
          }
        }
      }

      ## Split CSV and set the field names according to Palo Alto documentation: https://live.paloaltonetworks.com/servlet/JiveServlet/downloadBody/2021-102-8-13361/PANOS-Syslog-Integration-TN-RevM.pdf
      {
        split {
          inputField : paloalto_system
          outputFields : [ receive_time_ts, serial, type, subtype, vsys, eventid_i, object, module, severity, description, seqno_i, actionflags ]
          separator : ","
          isRegex : false
          addEmptyStrings : true
          trim : true
          limit: -1
        }
      }


      ## Remove temporary and useless fields before sending it to the cluster
      {
        removeFields {
          blacklist : ["literal:paloalto_system", "glob:FUTURE_USE*"]
          # whitelist: []
        }
      }
      {
        addValues {
          HEADER_extractor_name : morphlines_paloalto_system
          HEADER_extractor_version : [1]
        }
      }
      # log the record at DEBUG level to SLF4J
#      #{ logInfo { format : "output record paloalto: {}", args : ["@{}"] } }

    ]
  }


  #{
  # Add more morphlines here!
  #}
]
